pico-8 cartridge // http://www.pico-8.com
version 8
__lua__
package={loaded={},_c={}}
package._c["log"]=function()
local log = {
    debug = true,
    file = 'debug.log',
    _data = {},

    log = function(msg)
        add(log._data, msg)
    end,
    syslog = function(msg)
        printh(msg, log.file)
    end,
    render = function()
        if log.debug then
            color(7)
            for i = 1, #log._data do
                print(log._data[i], 5, 112 * i)
            end
        end

        log._data = {}
    end,
}
return log
end
package._c["v2"]=function()
local v2 = {
    mk = function(x, y)
        local v = {x = x, y = y,}
        setmetatable(v, v2.meta)
        return v;
    end,
    clone = function(x, y)
        return v2.mk(v.x, v.y)
    end,
    zero = function()
        return v2.mk(0, 0)
    end,
    mag = function(v)
        if v.x == 0 and v.y == 0 then
            return 0
        else
            return sqrt(v.x ^ 2 + v.y ^ 2)
        end
    end,
    norm = function(v)
        local m = v2.mag(v)
        if m == 0 then
            return v
        else
            return v2.mk(v.x / m, v.y / m)
        end
    end,
    str = function(v)
        return "("..v.x..", "..v.y..")"
    end,
    meta = {
        __add = function (a, b)
            return v2.mk(a.x + b.x, a.y + b.y)
        end,

        __sub = function (a, b)
            return v2.mk(a.x - b.x, a.y - b.y)
        end,

        __mul = function (a, b)
            if type(a) == "number" then
                return v2.mk(a * b.x, a * b.y)
            elseif type(b) == "number" then
                return v2.mk(b * a.x, b * a.y)
            else
                return v2.mk(a.x * b.x, a.y * b.y)
            end
        end,

        __div = function(a, b)
            v2.mk(a.x / b, a.y / b)
        end,

        __eq = function (a, b)
            return a.x == b.x and a.y == b.y
        end,
    },
}
return v2
end
package._c["game_obj"]=function()
local game_obj = {
    mk = function(name, type, pos_x, pos_y)
        local g = {
            name = name,
            type = type,
            x = pos_x,
            y = pos_y,
        }
        g.update = function(self)
        end

        return g
    end
}
return game_obj
end
package._c["game_cam"]=function()
game_obj = require('game_obj')

local game_cam = {
    mk = function(name, pos_x, pos_y, width, height, bounds_x, bounds_y)
        local c = game_obj.mk(name, 'camera', pos_x, pos_y)
        c.cam = {
            w = width,
            h = height,
            bounds_x = bounds_x,
            bounds_y = bounds_y,
            target = nil,
        }

        c.update = function(cam)
            -- Track a target
            target = cam.cam.target
            if target ~= nil then
                if target.x < cam.x + cam.cam.bounds_x then
                    cam.x = target.x - cam.cam.bounds_x
                elseif target.x > cam.x + cam.cam.w - cam.cam.bounds_x then
                    cam.x = target.x - cam.cam.w + cam.cam.bounds_x
                end

                if target.y < cam.y + cam.cam.bounds_y then
                    cam.y = target.y - cam.cam.bounds_y
                elseif target.y > cam.y + cam.cam.h - cam.cam.bounds_y then
                    cam.y = target.y - cam.cam.h + cam.cam.bounds_y
                end
            end

            -- Prevent camera from scrolling off the top-left side of the map
            if cam.x < 0 then cam.x = 0 end
            if cam.y < 0 then cam.y = 0 end
        end

        return c
    end,
    draw_start = function (cam)
        camera(cam.x, cam.y)
        clip(0, 0, cam.cam.w, cam.cam.h)
    end,
    draw_end = function(cam)
        camera()
        clip()
    end,
}
return game_cam
end
package._c["physics"]=function()
local physics = {
	check_collision = function(o1_x, o1_y, o1_w, o1_h, o2_x, o2_y, o2_w, o2_h)
		if  ((o1_x >= o2_x and o1_x <= (o2_x + o2_w)) or
			((o1_x + o1_w) >= o2_x and o1_x + o1_w <= (o2_x + o2_w))) and
			((o1_y >= o2_y and o1_y <= (o2_y + o2_h)) or
			((o1_y + o1_h) >= o2_y and o1_y + o1_h <= (o2_y + o2_h))) then
			return true
		else
			return false
		end
	end,

	check_collision_collidable = function(o1, o2)
		o1_anchor = o1.col.get_anchor(o1)
		o2_anchor = o2.col.get_anchor(o2)
		return physics.check_collision(o1_anchor.x, o1_anchor.y, o1.col.w, o1.col.h, o2_anchor.x, o2_anchor.y, o2.col.w, o2.col.h)
	end,

	check_collision_collidable_with_box = function(o1, o2_x, o2_y, o2_w, o2_h)
		o1_anchor = o1.col.get_anchor(o1)
		return physics.check_collision(o1_anchor.x, o1_anchor.y, o1.col.w, o1.col.h, o2_x, o2_y, o2_w, o2_h)
	end,
}
return physics
end
package._c["flag"]=function()
collider = require('collider')
game_obj = require('game_obj')
renderer = require('renderer')

local flag = {
	mk = function(name, x, y, palette)
	    local f = game_obj.mk(name, 'flag', x, y)
        renderer.attach(f, 16)
        f.renderable.draw_order = 1

        f.start_x = x
        f.start_y = y

        if palette ~= nil then
        	f.renderable.palette = palette
        end

	    collider.attach(f, 0, 0, 8, 8)

	    f.pickup_flag = function(self)
	    	self.renderable.enabled = false
	    	sfx(0)
		end

	    f.reset_flag = function(self)
	    	self.x = self.start_x
	    	self.y = self.start_y
	    	self.renderable.enabled = true
	    	sfx(1)
    	end

	    return f
	end
}

return flag
end
package._c["collider"]=function()
v2 = require('v2')

local collider = {
	attach = function(game_obj, anchor_x, anchor_y, w, h)
        local c = {
            game_obj = game_obj,
            anchor_x = anchor_x,
            anchor_y = anchor_y,
            w = w,
            h = h
        }

        c.get_anchor = function(self)
        	return v2.mk(self.col.game_obj.x + self.col.anchor_x, self.col.game_obj.y + self.col.anchor_y)
        end

        game_obj.col = c
        return game_obj
    end
}
return collider
end
package._c["renderer"]=function()
log = require('log')

local renderer = {
    render = function(cam, scene, bg)
        -- Collect renderables
        local to_render = {};
        for obj in all(scene) do
            if (obj.renderable) then
                if obj.renderable.enabled then
                    add(to_render, obj)
                end
            end
        end

        -- Sort
        renderer.sort(to_render)

        -- Draw
        game_cam.draw_start(cam)

        if bg then
            map(bg.x, bg.y, 0, 0, bg.w, bg.h)
        end

        for obj in all(to_render) do
            obj.renderable.render(obj.renderable, obj.x, obj.y)
        end

        game_cam.draw_end(cam)
    end,

    attach = function(game_obj, sprite)
        local r = {
            game_obj = game_obj,
            sprite = sprite,
            flip_x = false,
            flip_y = false,
            w = 1,
            h = 1,
            draw_order = 0,
            palette = nil,
            enabled = true
        }

        -- Default rendering function
        r.render = function(self, x, y)
            -- Set the palette
            if (self.palette) then
                -- Set colours
                for i = 0, 15 do
                    pal(i, self.palette[i + 1])
                end

                -- Set transparencies
                for i = 17, #self.palette do
                    palt(self.palette[i], true)
                end
            end

            -- Draw
            spr(self.sprite, x, y, self.w, self.h, self.flip_x, self.flip_y)

            -- Reset the palette
            if (self.palette) then
                pal()
                palt()
            end
        end

        -- Save the default render function in case the obj wants to use it in an overridden render function.
        r.default_render = r.render

        game_obj.renderable = r;
        return game_obj;
    end,

    -- Sort a renderable array by draw-order
    sort = function(list)
        renderer.sort_helper(list, 1, #list)
    end,
    -- Helper function for sorting renderables by draw-order
    sort_helper = function (list, low, high)
        if (low < high) then
            local p = renderer.sort_split(list, low, high)
            renderer.sort_helper(list, low, p - 1)
            renderer.sort_helper(list, p + 1, high)
        end
    end,
    -- Partition a renderable list by draw_order
    sort_split = function (list, low, high)
        local pivot = list[high]
        local i = low - 1
        local temp
        for j = low, high - 1 do
            if (list[j].renderable.draw_order < pivot.renderable.draw_order or
                (list[j].renderable.draw_order == pivot.renderable.draw_order and list[j].y < pivot.y)) then
                i += 1
                temp = list[j]
                list[j] = list[i]
                list[i] = temp
            end
        end

        if (list[high].renderable.draw_order < list[i + 1].renderable.draw_order or
            (list[high].renderable.draw_order == list[i + 1].renderable.draw_order and list[high].y < list[i + 1].y)) then
            temp = list[high]
            list[high] = list[i + 1]
            list[i + 1] = temp
        end

        return i + 1
    end
}
return renderer
end
package._c["home"]=function()
collider = require('collider')
game_obj = require('game_obj')
renderer = require('renderer')

local home = {
	mk = function(name, x, y, palette)
	    local h = game_obj.mk(name, 'home', x, y)
        renderer.attach(h, 80)
        h.renderable.draw_order = 0

        if palette ~= nil then
        	h.renderable.palette = palette
        end

	    collider.attach(h, 0, 0, 8, 8)

	    return h
	end
}

return home
end
package._c["player"]=function()
anim_spr = require('anim_spr')
collider = require('collider')
game_obj = require('game_obj')
renderer = require('renderer')
v2 = require('v2')

local player = {
	mk = function(name, controller, x, y, palette)
	    local p = game_obj.mk(name, 'player', x, y)
	    renderer.attach(p, 1)
	    p.controller = controller
	    p.vel = v2.mk(0, 0)
	    p.speed = 1
	    p.has_flag = false
	    p.renderable.draw_order = 2
	    p.renderable.palette = palette

	    -- Animations
		local anims = {
			idle = { 1, },
			walk = { 1, 2 },
			flag_idle = { 3 },
			flag_walk = { 3, 4 },
		}

		anim_spr.attach(p, 4, anims, "idle", 0)

	    collider.attach(p, 2, 6, 4, 2)

	    p.pickup_flag = function(self, flag)
	    	self.has_flag = true
	    	self.renderable.sprite = 3

	    	self.flag = flag
	    	self.flag.pickup_flag(self.flag)
	   	end

	   	p.drop_flag = function(self)
	   		self.has_flag = false
	   		self.renderable.sprite = 1

	   		self.flag.reset_flag(self.flag)
	   		self.flag = nil
	   	end

	    p.update = function (self)
		    self.vel = v2.mk(0, 0)

		    if btn(0, self.controller) then
		        self.vel.x -= self.speed
		    end

		    if btn(1, self.controller) then
		        self.vel.x += self.speed
		    end

		    if btn(2, self.controller) then
		        self.vel.y -= self.speed
		    end

		    if btn(3, self.controller) then
		        self.vel.y += self.speed
		    end

		    self.x += self.vel.x
		    self.y += self.vel.y

		    if self.vel.x < 0 then
		        self.renderable.flip_x = true
		    elseif self.vel.x > 0 then
		        self.renderable.flip_x = false
		    end

		    if self.vel.x != 0 then
		    	if self.has_flag then
		        	anim_spr.set_anim(self.anim, 'flag_walk')
		        else
		        	anim_spr.set_anim(self.anim, 'walk')
		        end
		    else
		    	if self.has_flag then
		        	anim_spr.set_anim(self.anim, 'flag_idle')
		        else
		        	anim_spr.set_anim(self.anim, 'idle')
		        end
		    end

		    anim_spr.update(self.anim)
		end

	    return p
	end
}

return player
end
package._c["anim_spr"]=function()
local anim_spr = {
	attach = function(game_obj, frames_per_cell, animations, start_anim, start_frame_offset)
		game_obj.anim = {
			game_obj = game_obj,
			current_animation = start_anim,
			current_cell = 1,
			frames_per_cell = frames_per_cell,
			current_frame = 1 + start_frame_offset,
			animations = animations,
			loop = true,
		}

		return game_obj
	end,

	update = function(anim)
		anim.current_frame += 1
		if (anim.current_frame > anim.frames_per_cell) then
			anim.current_frame = 1

			if (anim.current_animation != nil and anim.current_cell != nil) then
				anim.current_cell += 1
				if (anim.current_cell > #anim.animations[anim.current_animation]) then
					if anim.loop then
						anim.current_cell = 1
					else
						anim.current_cell = #anim.animations[anim.current_animation]
					end
				end
			end
		end

		if (anim.game_obj.renderable and anim.current_animation != nil and anim.current_cell != nil) then
			anim.game_obj.renderable.sprite = anim.animations[anim.current_animation][anim.current_cell]
		elseif (anim.game_obj.renderable) then
			anim.game_obj.renderable.sprite = nil
		end
	end,

	set_anim = function(anim, animation)
		if anim.current_animation != animation then
			anim.current_frame = 0
			anim.current_cell = 1
			anim.current_animation = animation
		end
	end,

	is_player = function(anim)
		return anim.current_animation != nil and anim.current_cell ~= nil and
		   (anim.loop or (not anim.loop and anim.current_cell < #anim.animations[anim.current_animation]))
	end
}

return anim_spr
end
package._c["post"]=function()
collider = require('collider')
game_obj = require('game_obj')
renderer = require('renderer')

local post = {
	mk = function(name, x, y)
	    local p = game_obj.mk(name, 'post', x, y)
	    renderer.attach(p, 32)
	    p.renderable.draw_order = 2
	    p.active_palette = {0, 12, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 1, 13, 14, 15}
	    p.cooldown = 2 * 30
	    p.cooldown_elapsed = 0
	    p.is_active = false

	    collider.attach(p, 2, 5, 4, 3)

	    p.activate = function(self)
	        self.renderable.palette = self.active_palette
	        self.is_active = true
	        p.cooldown_elapsed = 0
	    end

	    p.deactivate = function(self)
	        self.renderable.palette = nil
	        self.is_active = false
	        self.cooldown_elapsed = 0
	    end

	    p.update = function(self)
	        if self.is_active then
	            if self.cooldown_elapsed >= self.cooldown then
	                self.deactivate(self)
	            else
	                self.cooldown_elapsed += 1
	            end
	        end
	    end

	    return p
	end
}

return post
end
function require(p)
local l=package.loaded
if (l[p]==nil) l[p]=package._c[p]()
if (l[p]==nil) l[p]=true
return l[p]
end
log = require('log')
v2 = require('v2')
game_obj = require('game_obj')
game_cam = require('game_cam')
physics = require('physics')
flag = require('flag')
home = require('home')
player = require('player')
post = require('post')
renderer = require('renderer')

scene = {}
triggers = {}

cam = nil
background = {x = 0, y = 0, w = 16, h = 16}

state = "ingame"
last_winner = nil

p1 = nil
p1_score = 0
flag1 = nil
home1 = nil

p2 = nil
p2_score = 0
flag2 = nil
home2 = nil

function reset_level()
    if state == "ingame" then
        scene = {}
        cam = game_cam.mk("main-cam", 0, 0, screen_dim, screen_dim, 16, 16)
        add(scene, cam)

        -- Player 1 stuff
        p1_home_x = 10
        p1_home_y = 10

        home1 = home.mk('home1', p1_home_x, p1_home_y)
        add(scene, home1)

        p1 = player.mk('p1', 0, p1_home_x + 8, p1_home_y + 8, nil)
        add(scene, p1)

        flag1 = flag.mk('flag1', p1_home_x + 3, p1_home_y - 3)
        add(scene, flag1)

        -- Player 2 stuff
        p2_home_x = 64 - p1_home_x - 8
        p2_home_y = 64 - p1_home_x - 8
        p2_palette = {0, 1, 4, 3, 2, 5, 6, 7, 9, 8, 14, 11, 12, 13, 10, 15}

        home2 = home.mk('home2', p2_home_x, p2_home_y, p2_palette)
        add(scene, home2)

        p2 = player.mk('p2', 1, p2_home_x - 8, p2_home_y - 8, p2_palette)
        add(scene, p2)

        flag2 = flag.mk('flag2', p2_home_x + 3, p2_home_y - 3, p2_palette)
        add(scene, flag2)

        -- Electric posts
        mid_field_x = (64 / 2) - (8 / 2)
        mid_field_y = (64 / 2) - (8 / 2)
        post_distance = 20
        add(scene, post.mk('post1', mid_field_x, mid_field_y))
        add(scene, post.mk('post2', mid_field_x + post_distance, mid_field_y - post_distance))
        add(scene, post.mk('post3', mid_field_x - post_distance, mid_field_y + post_distance))
    elseif state == "game over" then
        scene = {}
        cam = game_cam.mk("main-cam", 0, 0, screen_dim, screen_dim, 16, 16)
        add(scene, cam)
    end
end

function render_ui()
    if false and state == "ingame" then
        rectfill(0, 0, 64, 7, 0)
        color(7)
        print("P1:"..p1_score, 1, 1)

        score_chars = 3
        if p2_score >= 10 then
            score_chars = 4
        end
        print("P2:"..p2_score, 64 - 1 - (5 * score_chars), 1)
    elseif state == "game over" then
        rectfill(2, 16, 62, 48, 13)
        rectfill(4, 18, 60, 46, 1)

        color(7)
        print(last_winner.name.." wins!", 17, 20)
        print("p1:"..p1_score.." vs. p2:"..p2_score, 7, 30)
        print("press 4 or 5", 9, 40)
    end
end

function game_over(winner)
    if winner == p1 then
        p1_score += 1
    else
        p2_score += 1
    end
    last_winner = winner

    state = "game over"
    reset_level()
end

function _init()
    log.debug = true

    -- Low-rez jam mode
    poke(0x5f2c, 3)
    screen_dim = 64

    state = "ingame"
    reset_level()
end

function _update()
    if state == "ingame" then

        for obj in all(scene) do
            if obj.update then
                obj.update(obj)
            end
        end

        -- Boundary collision
        for p in all({p1, p2}) do
            while physics.check_collision_collidable_with_box(p, 0, 0, 64, 1) do
                p.y += 1
            end
            while physics.check_collision_collidable_with_box(p, 0, 64, 64, 1) do
                p.y -= 1
            end
            while physics.check_collision_collidable_with_box(p, 0, 0, 1, 64) do
                p.x += 1
            end
            while physics.check_collision_collidable_with_box(p, 64, 0, 1, 64) do
                p.x -= 1
            end
        end

        -- Player collision
        if physics.check_collision_collidable(p1, p2) then
            dist = v2.norm(p2.col.get_anchor(p2) - p1.col.get_anchor(p1))
            p1_vel = v2.mk(0, 0)
            p2_vel = v2.mk(0, 0)

            -- If only one player is moving, collision stops that player and pushes the stationary one.
            if v2.mag(p1_vel) > 0 and v2.mag(p2_vel) == 0 then
                p2_vel = dist * 2.0
            elseif v2.mag(p1_vel) == 0 and v2.mag(p2_vel) > 0 then
                p1_vel = dist * -2.0
            else
                p1_vel = dist * -2.0
                p2_vel = dist * 2.0
            end

            p1.x += p1_vel.x
            p1.y += p1_vel.y
            p2.x += p2_vel.x
            p2.y += p2_vel.y
        end

        -- Enemy flag capture
        if p1.has_flag == false then
            if physics.check_collision_collidable(p1, flag2) then
                p1.pickup_flag(p1, flag2)
            end
        elseif p1.has_flag and not p2.has_flag then
            if physics.check_collision_collidable(p1, home1) then
                game_over(p1)
            end
        end

        if p2.has_flag == false then
            if physics.check_collision_collidable(p2, flag1) then
                p2.pickup_flag(p2, flag1)
            end
        elseif p2.has_flag and not p1.has_flag then
            if physics.check_collision_collidable(p2, home2) then
                game_over(p2)
            end
        end

        for obj in all(scene) do
            if obj.type == 'post' then
                if physics.check_collision_collidable(p1, obj) then
                    obj.activate(obj)
                    p1.x = 10
                    p1.y = 10

                    if p1.has_flag then
                        p1.drop_flag(p1)
                    end
                end

                if physics.check_collision_collidable(p2, obj) then
                    obj.activate(obj)
                    p2.x = 46
                    p2.y = 46

                    if p2.has_flag then
                        p2.drop_flag(p2)
                    end
                end
            end
        end

    elseif state == "game over" then
        for i = 4, 5 do
            if btnp(i, 0) or btnp(i, 1) then
                state = "ingame"
                reset_level()
            end
        end
    end

    log.log("Mem: "..stat(0).." CPU: "..stat(1))
end

function _draw()
    cls()

    renderer.render(cam, scene, background)
    render_ui()

    log.render()
end
__gfx__
0000000000ffff0000ffff0000999990009999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000ffffff00ffffff009999ff909999ff90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
007007000ffffcf00ffffcf0099ff7f0099ff7f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000770000ffffff00ffffff009fffff009fffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000009499000094990000949900009499000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
007007000094990000994f000094990000994f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000f9900000999000009f900000999000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000010c00000c010000010c00000c01000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
99990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55999999000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
99990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00911100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00199100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00111900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00911100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00199100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00111900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
333333333333333b3333333355555555555555555555555533333335533333333333333333333335533333330000000000000000000000000000000000000000
3333333333b333333333333353333333333333333333333533333335533333333333333333333335533333330000000000000000000000000000000000000000
333333333333333333b3333353333333333333333333333533333335533333333333333333333335533333330000000000000000000000000000000000000000
33333333333333333333333b53333333333333333333333533333335533333333333333333333335533333330000000000000000000000000000000000000000
33333333333333333333333353333333333333333333333533333335533333333333333333333335533333330000000000000000000000000000000000000000
33333333333333333333333353333333333333333333333533333335533333333333333333333335533333330000000000000000000000000000000000000000
333333333333333b333b333353333333333333333333333533333335533333333333333333333335533333330000000000000000000000000000000000000000
33333333333333333333333353333333333333333333333533333335533333335555555555555555555555550000000000000000000000000000000000000000
0aaaaaa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
aa4444aa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
a444444a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
a444444a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
a444444a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
a444444a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
aa4444aa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0aaaaaa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

__gff__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
4344444444444445404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4740404040404046414040404040404040404141404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4740404040404146404240404040404040404040404040404041404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4740404040404046404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4740404040404046404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4741404040404046404040404040404040404040404040404040404141414040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4740404040404046424040404040404040404040404040404040404040414040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4a48484848484849404040404040404140404040404040404040404041404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5050505050535050505053404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040514040404051404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4140404040514060614051404040404040404040404040414240404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040514070714051404040404040404040404040414240404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040514040404051404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040525050505050404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4140404040404040404040424040404040404040404040404040404040424040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404140404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4041414140404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040414140404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404140404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404242404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404140404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4242424040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4242404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000600000c3500c35016350163502b3502b3503c3503c3501b3000a3000130002300023000230001300013000130001300023000230002300013000130001300023000130001300013001d3000c3000c3000a300
000600003a4503a4502b4502b4501a4501a4500a4500a4501b4000a4000140002400024000240001400014000140001400024000240002400014000140001400024000140001400014001d4000c4000c4000a400
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344

